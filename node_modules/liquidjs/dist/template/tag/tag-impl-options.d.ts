import { Context } from 'liquidjs/dist/context/context';
import { TagToken } from 'liquidjs/dist/tokens/tag-token';
import { TopLevelToken } from 'liquidjs/dist/tokens/toplevel-token';
import { TagImpl } from 'liquidjs/dist/template/tag/tag-impl';
import { HashValue } from 'liquidjs/dist/template/tag/hash';
import { Emitter } from 'liquidjs/dist/emitters/emitter';
export interface TagImplOptions {
    parse?: (this: TagImpl, token: TagToken, remainingTokens: TopLevelToken[]) => void;
    render: (this: TagImpl, ctx: Context, emitter: Emitter, hash: HashValue) => void | string | Promise<void | string> | Generator<unknown, void | string, unknown>;
}
